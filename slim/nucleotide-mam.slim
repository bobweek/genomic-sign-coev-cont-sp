species all initialize(){
	defineConstant("L", 1);
}

species host initialize() {
	initializeSpecies(tickModulo=1, tickPhase=1, avatar="ðŸ¦Œ");
	
	// host genomics
	initializeSLiMOptions(nucleotideBased=T);	
	initializeAncestralNucleotides(randomNucleotides(L));
	initializeMutationTypeNuc("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0, mmJukesCantor(1e-3));
	initializeGenomicElement(g1, 0, L-1);
	initializeRecombinationRate(1e-8);
}

species para initialize() {
	initializeSpecies(tickModulo=1, tickPhase=1, avatar="ðŸª±");
	
	// parasite genomics
	initializeSLiMOptions(nucleotideBased=T);	
	initializeAncestralNucleotides(randomNucleotides(L));
	initializeMutationTypeNuc("m2", 0.5, "f", 0.0);
	initializeGenomicElementType("g2", m2, 1.0, mmJukesCantor(1e-3));
	initializeGenomicElement(g2, 0, L-1);
	initializeRecombinationRate(1e-8);
}

ticks all 1 early() {
	host.addSubpop("p0", 500);
	para.addSubpop("p1", 500);
}

ticks all late(){
	
	// each parasite will pick a random host
	for(p in p1.individuals){
		
		// pull out the parasite genome to compare with host genome
		pgt = p.genomes;

		// pick a random host for parasite to attempt to infect
		h = p0.individuals[rdunif(1, 0, length(p0.individuals)-1)];
		
		// pull out host genome
		hgt = h.genomes;
		
		// below is an implementation of a diploid matching-allele model		
		
		// if the host is homozygous
		if(hgt.nucleotides()[0]==hgt.nucleotides()[1]){
			// and the parasite is homozygous
			if(pgt.nucleotides()[0]==pgt.nucleotides()[1]){
				// and they are homozygous for the same allele
				if(hgt.nucleotides()[0]==pgt.nucleotides()[0]){
					p.fitnessScaling = 1.5*p.fitnessScaling; // then the parasite has increased fitness
					h.fitnessScaling = 0.5*h.fitnessScaling; // and the host has decreased fitness
				}
			}
		}
		
	}
}

ticks all 5000 late() {
	community.simulationFinished();
	catn("Done.");
}